{"version":3,"sources":["components/NodeCoverage.js","components/SWTest.js","App.js","reportWebVitals.js","index.js"],"names":["NodeCoverage","nc","nodes","map","node","index","className","alpha1","alpha2","sameSignum","undefined","output","SWTest","computeInteraction","point1","point2","point3","point4","x","y","console","log","alert","toString","Math","abs","beta2","beta1","sign","useState","p1_0","setP1_0","p1_1","setP1_1","p2_0","setP2_0","p2_1","setP2_1","p3_0","setP3_0","p3_1","setP3_1","p4_0","setP4_0","p4_1","setP4_1","thealpha1","setAlpha1","thealpha2","setAlpha2","thesignSignum","setSignnum","theoutput","setOutput","thenodes","setNodes","value","onChange","event","target","onClick","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc9bae17.chunk.js","sourcesContent":["import React from 'react'\n\nfunction NodeCoverage({nodes}) {\n    let nc = nodes.map((node, index) => {\n        if (node){\n            return (\n                <div className=\"flex\" key={index}>\n                    <label>{\"-->\"}</label>\n                    <div className=\"node\">\n                        {index + 1}\n                    </div>\n                </div>\n            )\n        }\n    })\n\n    return(\n        <div className=\"node-list-container\">\n            <h3>Nodes Covered</h3>\n            <div className=\"node-list\">\n                {nc}\n            </div>\n        </div>\n    )\n}\n\nexport default NodeCoverage\n\n","import React, {useState}from 'react'\nimport NodeCoverage from \"./NodeCoverage\"\n\n// Data section\nlet alpha1 = 0;\nlet alpha2 = 0;\nlet sameSignum = undefined;\nlet output = [];\nlet nodes = [];\n\n\nfunction SWTest() {\n    function toggleNode1(){\n        nodes[0] = true;  // node setter\n        return true;\n    }\n\n    function toggleNode3(){\n         nodes[2] = true;  // node setter\n         return true;\n    }\n\n    function toggleNode5(){\n        nodes[4] = true;   // node setter\n        return true;\n    }\n    function toggleNode6(){\n        nodes[5] = true;   // node setter\n        return true;\n    }\n\n    function computeInteraction(point1, point2, point3, point4){\n        let x = point2 [0];\n        let y = point2 [1];\n        alpha1 = (point2 [1] - point1 [1]) / (point2 [0] - point1 [0]);\n        alpha2 = (point4 [1] - point3 [1]) / (point4 [0] - point3 [0]);\n        console.log(\"- Node1: (alpha1, alpha2) \" + alpha1 + \", \" + alpha2);\n        if(alpha1 === alpha2) alert(`Special Case: These lines are parallel (i.e they will never meet), hence there is no instersection. [${x},${y}] is not the correct expected outputs, your expected output should probably be [] or throw an exception or something.`);\n        if(alpha1.toString() === \"NaN\" || alpha2.toString() === \"NaN\") return [x,y];\n        if (toggleNode1() && alpha1.toString() !== alpha2.toString()) {\n            nodes[1] = true;\n            // If first line is vertical\n           if (Math.abs(alpha1) > 4000)  {\n             if (toggleNode3() && Math.abs(alpha2) < 4000) {\n                nodes[3] = true;  // node setter\n                x = point1 [0];\n                let beta2 = point4 [1] - alpha2 * point4 [0];\n                y = alpha2 * x + beta2;\n            }\n            // If second line is vertical\n            } else if (toggleNode5() && Math.abs(alpha2) > 4000) {\n                if (toggleNode6() && Math.abs(alpha1) < 4000) {\n                    nodes[6] = true;\n                    x = point3 [0];\n                    let beta1 = point2 [1] - alpha1 * point2 [0];\n                    y = alpha1 * x + beta1;\n                }\n            } else { \n                nodes[7] = true;\n                sameSignum = Math.sign(alpha1) === Math.sign(alpha2);\n                if ((sameSignum && (Math.abs(alpha1) > Math.abs(alpha2)   ? alpha1 / alpha2   : alpha2 / alpha1) > 1.0001)\n                    || (!sameSignum && Math.abs(alpha1 - alpha2) > 1E-5)) {\n                    nodes[8] = true;\n                    let beta1 = point2 [1] - alpha1 * point2 [0];\n                    let beta2 = point4 [1] - alpha2 * point4 [0];\n                    x = (beta2 - beta1) / (alpha1 - alpha2);\n                    y = alpha1 * x + beta1;\n                }\n            } \n        }\n        console.log(\"- Node10: (alpha1, alpha2, sameSignum): \" + alpha1 + \", \" + alpha2 + \", \" + sameSignum);\n        nodes[9] = true;\n        return [x, y];\n    }\n\n    const [p1_0, setP1_0] = useState(0);\n    const [p1_1, setP1_1] = useState(0);\n    const [p2_0, setP2_0] = useState(0);\n    const [p2_1, setP2_1] = useState(0);\n    const [p3_0, setP3_0] = useState(0);\n    const [p3_1, setP3_1] = useState(0);\n    const [p4_0, setP4_0] = useState(0);\n    const [p4_1, setP4_1] = useState(0);\n    const [thealpha1, setAlpha1] = useState(\"NaN\");\n    const [thealpha2, setAlpha2] = useState(\"NaN\");\n    const [thesignSignum, setSignnum] = useState([\"NaN\"]);\n    const [theoutput, setOutput] = useState(\"...\");\n    const [thenodes, setNodes] = useState([]);\n\n\n    const handleP1_0 = (event) =>{\n        setP1_0(event.target.value);\n    }\n\n    const handleP1_1 = (event) =>{\n        setP1_1(event.target.value);\n    }\n\n    const handleP2_0 = (event) =>{\n        setP2_0(event.target.value);\n    }\n\n    const handleP2_1 = (event) =>{\n        setP2_1(event.target.value);\n    }\n\n    const handleP3_0 = (event) =>{\n        setP3_0(event.target.value);\n    }\n\n    const handleP3_1 = (event) =>{\n        setP3_1(event.target.value);\n    }\n\n    const handleP4_0 = (event) =>{\n        setP4_0(event.target.value);\n    }\n\n    const handleP4_1 = (event) =>{\n        setP4_1(event.target.value);\n    }\n\n    const clearNodes = () => {\n        nodes = [];\n        setNodes(nodes);\n    }\n\n    const clearInputs = () => {\n        setP1_0(\"\");\n        setP1_1(\"\");\n        setP2_0(\"\");\n        setP2_1(\"\");\n        setP3_0(\"\");\n        setP3_1(\"\");\n        setP4_0(\"\");\n        setP4_1(\"\");\n    }\n\n    const handleReset = () => {\n        alpha1 = 0;\n        alpha2 = 0;\n        sameSignum = undefined;\n        output = [];\n        setAlpha1(\"NaN\");\n        setAlpha2(\"NaN\");\n        setSignnum(\"NaN\");\n        setOutput(output)\n        clearNodes();\n        clearInputs();\n    }\n\n    const handleSubmit = () => {\n        output = computeInteraction([p1_0, p1_1], [p2_0, p2_1], [p3_0, p3_1], [p4_0, p4_1]);\n        setAlpha1(alpha1);\n        setAlpha2(alpha2);\n        if(sameSignum === undefined){\n            setSignnum(\"NaN\");\n        }else{\n            sameSignum? setSignnum(\"True\"): setSignnum(\"False\");\n        }\n        setOutput(`[${output[0]}, ${output[1]}]`);\n        setNodes(nodes);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"container2\">\n                <div className=\"section\">\n                    <h3>Inputs</h3>\n                    <div>\n                        <label>point1: </label>\n                        <input className=\"input\" value={p1_0} onChange = {handleP1_0}></input>\n                        <input className=\"input\" value={p1_1} onChange = {handleP1_1}></input>\n                    </div>\n                    <div>\n                        <label>point2: </label>\n                        <input className=\"input\" value={p2_0} onChange = {handleP2_0}></input>\n                        <input className=\"input\" value={p2_1} onChange = {handleP2_1}></input>\n                    </div>\n                    <div>\n                        <label>point3: </label>\n                        <input className=\"input\" value={p3_0} onChange = {handleP3_0}></input>\n                        <input className=\"input\" value={p3_1} onChange = {handleP3_1}></input>\n                    </div>\n                    <div>\n                        <label>point4: </label>\n                        <input className=\"input\" value={p4_0} onChange = {handleP4_0}></input>\n                        <input className=\"input\" value={p4_1} onChange = {handleP4_1}></input>\n                    </div>\n                    <div className=\"clear\">\n                        <button onClick={handleReset}>Reset</button>\n                    </div>\n                    <div className=\"submit\">\n                        <button onClick={handleSubmit}>Submit</button>\n                    </div>  \n                </div>\n                <div className=\"section\">\n                    <h3>Computed Values</h3>\n                    <div className=\"flex-start\">\n                        <p>alpha1: <span>{thealpha1}</span> </p>\n                    </div>\n                    <div className=\"flex-start\">\n                        <p>alpha2: <span>{thealpha2}</span> </p>\n                    </div>\n                    <div className=\"flex-start\">\n                        <p>sameSignum: <span>{thesignSignum}</span> </p>\n                    </div>\n                </div> \n                <div className=\"section\">\n                    <h3>Output</h3>\n                    <div className=\"flex-start\">\n                        <p>{theoutput}</p>\n                    </div>\n                </div>\n                            \n            </div>\n            <div className=\"nc-section\">\n                {(thenodes.length !== 0) && <NodeCoverage nodes={thenodes} />}\n            </div>  \n        </div>\n    )\n}\n\n\nexport default SWTest\n","\nimport './App.css';\nimport SwTest from \"./components/SWTest\" \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SwTest />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}