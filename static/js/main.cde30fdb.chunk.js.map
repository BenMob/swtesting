{"version":3,"sources":["components/NodeCoverage.js","Services/Expected.js","components/SWTest.js","App.js","reportWebVitals.js","index.js"],"names":["NodeCoverage","nodes","label","nc","map","node","index","className","CorrectFunction","this","alpha1","alpha2","sameSignum","undefined","output","point1","point2","point3","point4","x","y","toString","toggleNode1","Math","abs","toggleNode3","beta2","toggleNode5","toggleNode6","beta1","sign","p1","p2","p3","p4","computeInteraction","SWTest","console","log","alert","useState","p1_0","setP1_0","p1_1","setP1_1","p2_0","setP2_0","p2_1","setP2_1","p3_0","setP3_0","p3_1","setP3_1","p4_0","setP4_0","p4_1","setP4_1","thealpha1","setAlpha1","thealpha2","setAlpha2","thesignSignum","setSignnum","theoutput","setOutput","thenodes","setNodes","expectedN","setExpectedN","expected","setExpected","resetGobalValues","value","onChange","event","target","onClick","correctFunction","correct","getCorrectOutput","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNA0BeA,MAxBf,YAAuC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACtBC,EAAKF,EAAMG,KAAI,SAACC,EAAMC,GACtB,GAAID,EACA,OACI,sBAAKE,UAAU,OAAf,UACI,gCAAQ,WACR,qBAAKA,UAAU,OAAf,SACKD,EAAQ,MAHUA,MAUvC,OACI,sBAAKC,UAAU,sBAAf,UACI,6BAAKL,IACL,qBAAKK,UAAU,YAAf,SACKJ,Q,cCnBIK,E,WAEjB,aAAc,oBACVC,KAAKC,OAAS,EACdD,KAAKE,OAAS,EACdF,KAAKG,gBAAaC,EAClBJ,KAAKK,OAAS,GACdL,KAAKR,MAAQ,G,+CAGjB,WAEI,OADAQ,KAAKR,MAAM,IAAK,GACT,I,yBAGX,WAEK,OADAQ,KAAKR,MAAM,IAAK,GACT,I,yBAGZ,WAEI,OADAQ,KAAKR,MAAM,IAAK,GACT,I,yBAEX,WAEI,OADAQ,KAAKR,MAAM,IAAK,GACT,I,gCAGX,SAAmBc,EAAQC,EAAQC,EAAQC,GACvC,IAAIC,EAAIJ,EAAQ,GACZK,EAAIH,EAAQ,GAIhB,GAHAR,KAAKC,QAAUM,EAAQ,GAAKD,EAAQ,KAAOC,EAAQ,GAAKD,EAAQ,IAChEN,KAAKE,QAAUO,EAAQ,GAAKD,EAAQ,KAAOC,EAAQ,GAAKD,EAAQ,IAElC,QAA3BR,KAAKC,OAAOW,YAAmD,QAA3BZ,KAAKE,OAAOU,WAE/C,OADAZ,KAAKR,MAAM,IAAK,EACT,CAACkB,EAAEC,GAEd,GAAIX,KAAKa,eAAiBb,KAAKC,OAAOW,aAAeZ,KAAKE,OAAOU,WAG9D,GAFCZ,KAAKR,MAAM,IAAK,EAEbsB,KAAKC,IAAIf,KAAKC,QAAU,KAC1B,GAAID,KAAKgB,eAAiBF,KAAKC,IAAIf,KAAKE,QAAU,IAAM,CACrDF,KAAKR,MAAM,IAAK,EAChBkB,EAAIJ,EAAQ,GACZ,IAAIW,EAAQR,EAAQ,GAAKT,KAAKE,OAASO,EAAQ,GAC/CE,EAAIX,KAAKE,OAASQ,EAAIO,QAGnB,GAAIjB,KAAKkB,eAAiBJ,KAAKC,IAAIf,KAAKE,QAAU,KACrD,GAAIF,KAAKmB,eAAiBL,KAAKC,IAAIf,KAAKC,SAAW,IAAM,CACrDD,KAAKR,MAAM,IAAK,EAChBkB,EAAIF,EAAQ,GACZ,IAAIY,EAAQb,EAAQ,GAAKP,KAAKC,OAASM,EAAQ,GAC/CI,EAAIX,KAAKC,OAASS,EAAIU,QAK1B,GAFApB,KAAKR,MAAM,IAAK,EAChBQ,KAAKG,WAAaW,KAAKO,KAAKrB,KAAKC,UAAYa,KAAKO,KAAKrB,KAAKE,QACvDF,KAAKG,aAAeW,KAAKC,IAAIf,KAAKC,QAAUa,KAAKC,IAAIf,KAAKE,QAAYF,KAAKC,OAASD,KAAKE,OAAWF,KAAKE,OAASF,KAAKC,QAAU,SAC7HD,KAAKG,YAAcW,KAAKC,IAAIf,KAAKC,OAASD,KAAKE,QAAU,KAAO,CACrEF,KAAKR,MAAM,IAAK,EAChB,IAAI4B,EAAQb,EAAQ,GAAKP,KAAKC,OAASM,EAAQ,GAE/CG,GADYD,EAAQ,GAAKT,KAAKE,OAASO,EAAQ,GAClCW,IAAUpB,KAAKC,OAASD,KAAKE,QAC1CS,EAAIX,KAAKC,OAASS,EAAIV,KAAKoB,MAKvC,OADApB,KAAKR,MAAM,IAAK,EACT,CAACkB,EAAGC,K,8BAGd,SAAiBW,EAAIC,EAAIC,EAAIC,GAE1B,OADAzB,KAAKK,OAASL,KAAK0B,mBAAmBJ,EAAIC,EAAIC,EAAIC,GAC3CzB,KAAKK,W,KCxEhBJ,EAAS,EACTC,EAAS,EACTC,OAAaC,EACbC,EAAS,GACTb,EAAQ,GA2OGmC,MAxOf,WACI,SAASd,IAEL,OADArB,EAAM,IAAK,GACJ,EAiBX,SAASkC,EAAmBpB,EAAQC,EAAQC,EAAQC,GAChD,IAAIC,EAAIH,EAAQ,GACZI,EAAIJ,EAAQ,GAKhB,GAJAN,GAAUM,EAAQ,GAAKD,EAAQ,KAAOC,EAAQ,GAAKD,EAAQ,IAC3DJ,GAAUO,EAAQ,GAAKD,EAAQ,KAAOC,EAAQ,GAAKD,EAAQ,IAC3DoB,QAAQC,IAAI,6BAA+B5B,EAAS,KAAOC,GACxDD,IAAWC,GAAQ4B,MAAM,wGAAD,OAAyGpB,EAAzG,YAA8GC,EAA9G,0HACF,QAAtBV,EAAOW,YAA8C,QAAtBV,EAAOU,WAErC,OADAC,IACO,CAACH,EAAEC,GAEd,GAAIE,KAAiBZ,EAAOW,aAAeV,EAAOU,WAG/C,GAFCpB,EAAM,IAAK,EAERsB,KAAKC,IAAId,GAAU,KACrB,GA5BJT,EAAM,IAAK,EA4BcsB,KAAKC,IAAIb,GAAU,IAAM,CAC3CV,EAAM,IAAK,EACXkB,EAAIJ,EAAQ,GACZ,IAAIW,EAAQR,EAAQ,GAAKP,EAASO,EAAQ,GAC1CE,EAAIT,EAASQ,EAAIO,QAGd,GA9BXzB,EAAM,IAAK,EA8BqBsB,KAAKC,IAAIb,GAAU,KAC3C,GA3BRV,EAAM,IAAK,EA2BkBsB,KAAKC,IAAId,GAAU,IAAM,CAC1CT,EAAM,IAAK,EACXkB,EAAIF,EAAQ,GACZ,IAAIY,EAAQb,EAAQ,GAAKN,EAASM,EAAQ,GAC1CI,EAAIV,EAASS,EAAIU,QAKrB,GAFA5B,EAAM,IAAK,GACXW,EAAaW,KAAKO,KAAKpB,KAAYa,KAAKO,KAAKnB,MACzBY,KAAKC,IAAId,GAAUa,KAAKC,IAAIb,GAAYD,EAASC,EAAWA,EAASD,GAAU,SAC1FE,GAAcW,KAAKC,IAAId,EAASC,GAAU,KAAO,CACtDV,EAAM,IAAK,EACX,IAAI4B,EAAQb,EAAQ,GAAKN,EAASM,EAAQ,GACtCU,EAAQR,EAAQ,GAAKP,EAASO,EAAQ,GAE1CE,EAAIV,GADJS,GAAKO,EAAQG,IAAUnB,EAASC,IACfkB,EAM7B,OAFAQ,QAAQC,IAAI,2CAA6C5B,EAAS,KAAOC,EAAS,KAAOC,GACzFX,EAAM,IAAK,EACJ,CAACkB,EAAGC,GAhED,MAmEUoB,mBAAS,GAnEnB,mBAmEPC,EAnEO,KAmEDC,EAnEC,OAoEUF,mBAAS,GApEnB,mBAoEPG,EApEO,KAoEDC,EApEC,OAqEUJ,mBAAS,GArEnB,mBAqEPK,EArEO,KAqEDC,EArEC,OAsEUN,mBAAS,GAtEnB,mBAsEPO,EAtEO,KAsEDC,EAtEC,OAuEUR,mBAAS,GAvEnB,mBAuEPS,EAvEO,KAuEDC,EAvEC,OAwEUV,mBAAS,GAxEnB,mBAwEPW,EAxEO,KAwEDC,EAxEC,OAyEUZ,mBAAS,GAzEnB,mBAyEPa,EAzEO,KAyEDC,EAzEC,OA0EUd,mBAAS,GA1EnB,mBA0EPe,EA1EO,KA0EDC,EA1EC,OA2EiBhB,mBAAS,OA3E1B,mBA2EPiB,EA3EO,KA2EIC,EA3EJ,OA4EiBlB,mBAAS,OA5E1B,mBA4EPmB,EA5EO,KA4EIC,EA5EJ,OA6EsBpB,mBAAS,CAAC,QA7EhC,mBA6EPqB,GA7EO,KA6EQC,GA7ER,QA8EiBtB,mBAAS,OA9E1B,qBA8EPuB,GA9EO,MA8EIC,GA9EJ,SA+EexB,mBAAS,IA/ExB,qBA+EPyB,GA/EO,MA+EGC,GA/EH,SAgFoB1B,mBAAS,IAhF7B,qBAgFP2B,GAhFO,MAgFIC,GAhFJ,SAiFkB5B,mBAAS,OAjF3B,qBAiFP6B,GAjFO,MAiFGC,GAjFH,MAqIRC,GAAmB,WACrB7D,EAAS,EACTC,EAAS,EACTC,OAAaC,EACbC,EAAS,GAnBToD,GADAjE,EAAQ,IAERmE,GAAa,KAkDjB,OACI,sBAAK7D,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,UAAf,UACI,wCACA,gCACI,6CACA,uBAAOA,UAAU,QAAQiE,MAAO/B,EAAMgC,SA5FvC,SAACC,GAChBhC,EAAQgC,EAAMC,OAAOH,UA4FL,uBAAOjE,UAAU,QAAQiE,MAAO7B,EAAM8B,SAzFvC,SAACC,GAChB9B,EAAQ8B,EAAMC,OAAOH,aA0FT,gCACI,6CACA,uBAAOjE,UAAU,QAAQiE,MAAO3B,EAAM4B,SAzFvC,SAACC,GAChB5B,EAAQ4B,EAAMC,OAAOH,UAyFL,uBAAOjE,UAAU,QAAQiE,MAAOzB,EAAM0B,SAtFvC,SAACC,GAChB1B,EAAQ0B,EAAMC,OAAOH,aAuFT,gCACI,6CACA,uBAAOjE,UAAU,QAAQiE,MAAOvB,EAAMwB,SAtFvC,SAACC,GAChBxB,EAAQwB,EAAMC,OAAOH,UAsFL,uBAAOjE,UAAU,QAAQiE,MAAOrB,EAAMsB,SAnFvC,SAACC,GAChBtB,EAAQsB,EAAMC,OAAOH,aAoFT,gCACI,6CACA,uBAAOjE,UAAU,QAAQiE,MAAOnB,EAAMoB,SAnFvC,SAACC,GAChBpB,EAAQoB,EAAMC,OAAOH,UAmFL,uBAAOjE,UAAU,QAAQiE,MAAOjB,EAAMkB,SAhFvC,SAACC,GAChBlB,EAAQkB,EAAMC,OAAOH,aAiFT,qBAAKjE,UAAU,QAAf,SACI,wBAAQqE,QAtDR,WAChBL,KACAb,EAAU,OACVE,EAAU,OACVE,GAAW,OACXE,GAAUlD,GACVwD,GAAY,IAxBZ5B,EAAQ,IACRE,EAAQ,IACRE,EAAQ,IACRE,EAAQ,IACRE,EAAQ,IACRE,EAAQ,IACRE,EAAQ,IACRE,EAAQ,KAiEQ,qBAEJ,qBAAKjD,UAAU,SAAf,SACI,wBAAQqE,QA/CP,WACjBL,KACAzD,EAASqB,EAAmB,CAACM,EAAME,GAAO,CAACE,EAAME,GAAO,CAACE,EAAME,GAAO,CAACE,EAAME,IAC7E,IAAIsB,EAAkB,IAAIrE,EACtBsE,EAAUD,EAAgBE,iBAAiB,CAACtC,EAAME,GAAO,CAACE,EAAME,GAAO,CAACE,EAAME,GAAO,CAACE,EAAME,IAChGa,GAAaS,EAAgB5E,OAC7BqE,GAAY,IAAD,OAAKQ,EAAQ,GAAb,YAAmBA,EAAQ,GAA3B,MACXpB,EAAUhD,GACVkD,EAAUjD,GAENmD,QADcjD,IAAfD,EACY,MAEXA,EAAuB,OAAoB,SAE/CoD,GAAU,IAAD,OAAKlD,EAAO,GAAZ,aAAmBA,EAAO,GAA1B,MACToD,GAASjE,IAgCO,yBAGR,sBAAKM,UAAU,UAAf,UACI,iDACA,qBAAKA,UAAU,aAAf,SACI,yCAAW,+BAAOkD,IAAlB,SAEJ,qBAAKlD,UAAU,aAAf,SACI,yCAAW,+BAAOoD,IAAlB,SAEJ,qBAAKpD,UAAU,aAAf,SACI,6CAAe,+BAAOsD,KAAtB,YAGR,sBAAKtD,UAAU,UAAf,UACI,yCACA,sBAAKA,UAAU,WAAf,UACI,2CAAc8D,MACd,yCAAYN,eAKxB,sBAAKxD,UAAU,aAAf,UAC0B,IAApB0D,GAASe,QAAiB,cAAC,EAAD,CAAc/E,MAAOgE,GAAU/D,MAAM,gBAC1C,IAArBiE,GAAUa,QAAiB,cAAC,EAAD,CAAc/E,MAAOkE,GAAWjE,MAAM,yBChOpE+E,MARf,WACE,OACE,qBAAK1E,UAAU,MAAf,SACE,cAAC,EAAD,OCKS2E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cde30fdb.chunk.js","sourcesContent":["import React from 'react'\n\nfunction NodeCoverage({nodes, label}) {\n    let nc = nodes.map((node, index) => {\n        if (node){\n            return (\n                <div className=\"flex\" key={index}>\n                    <label>{\"-->\"}</label>\n                    <div className=\"node\">\n                        {index + 1}\n                    </div>\n                </div>\n            )\n        }\n    })\n\n    return(\n        <div className=\"node-list-container\">\n            <h3>{label}</h3>\n            <div className=\"node-list\">\n                {nc}\n            </div>\n        </div>\n    )\n}\n\nexport default NodeCoverage\n\n","\nexport default class CorrectFunction{\n\n    constructor(){\n        this.alpha1 = 0;\n        this.alpha2 = 0;\n        this.sameSignum = undefined;\n        this.output = [];\n        this.nodes = [];\n    }\n\n    toggleNode1(){\n        this.nodes[0] = true;  // node setter\n        return true;\n    }\n\n    toggleNode3(){\n         this.nodes[2] = true;  // node setter\n         return true;\n    }\n\n    toggleNode5(){\n        this.nodes[4] = true;   // node setter\n        return true;\n    }\n    toggleNode6(){\n        this.nodes[5] = true;   // node setter\n        return true;\n    }\n\n    computeInteraction(point1, point2, point3, point4){\n        let x = point1 [0];\n        let y = point3 [1];\n        this.alpha1 = (point2 [1] - point1 [1]) / (point2 [0] - point1 [0]);\n        this.alpha2 = (point4 [1] - point3 [1]) / (point4 [0] - point3 [0]);\n    \n        if(this.alpha1.toString() === \"NaN\" || this.alpha2.toString() === \"NaN\") {\n            this.nodes[0] = true\n            return [x,y];\n        }\n        if (this.toggleNode1() && this.alpha1.toString() !== this.alpha2.toString()) {\n            this.nodes[1] = true;\n            // If first line is vertical\n           if (Math.abs(this.alpha1) > 4000)  {\n             if (this.toggleNode3() && Math.abs(this.alpha2) > 4000) {\n                this.nodes[3] = true;  // node setter\n                x = point1 [0];\n                let beta2 = point4 [1] - this.alpha2 * point4 [0];\n                y = this.alpha2 * x + beta2;\n            }\n            // If second line is vertical\n            } else if (this.toggleNode5() && Math.abs(this.alpha2) > 4000) {\n                if (this.toggleNode6() && Math.abs(this.alpha1) <= 4000) {\n                    this.nodes[6] = true;\n                    x = point3 [0];\n                    let beta1 = point2 [1] - this.alpha1 * point2 [0];\n                    y = this.alpha1 * x + beta1;\n                }\n            } else { \n                this.nodes[7] = true;\n                this.sameSignum = Math.sign(this.alpha1) === Math.sign(this.alpha2);\n                if ((this.sameSignum && (Math.abs(this.alpha1) > Math.abs(this.alpha2)   ? this.alpha1 / this.alpha2   : this.alpha2 / this.alpha1) > 1.0001)\n                    || (!this.sameSignum && Math.abs(this.alpha1 - this.alpha2) > 1E-5)) {\n                    this.nodes[8] = true;\n                    let beta1 = point2 [1] - this.alpha1 * point2 [0];\n                    let beta2 = point4 [1] - this.alpha2 * point4 [0];\n                    x = (beta2 - beta1) / (this.alpha1 - this.alpha2);\n                    y = this.alpha1 * x + this.beta1;\n                }\n            } \n        }\n        this.nodes[9] = true;\n        return [x, y];\n    }\n\n     getCorrectOutput(p1, p2, p3, p4){\n        this.output = this.computeInteraction(p1, p2, p3, p4);\n        return this.output;\n    }\n}\n\n\n","import React, {useState}from 'react'\nimport NodeCoverage from \"./NodeCoverage\"\nimport CorrectFunction from \"../Services/Expected\"\n\n// Data section\nlet alpha1 = 0;\nlet alpha2 = 0;\nlet sameSignum = undefined;\nlet output = [];\nlet nodes = [];\n\n\nfunction SWTest() {\n    function toggleNode1(){\n        nodes[0] = true;  // node setter\n        return true;\n    }\n\n    function toggleNode3(){\n         nodes[2] = true;  // node setter\n         return true;\n    }\n\n    function toggleNode5(){\n        nodes[4] = true;   // node setter\n        return true;\n    }\n    function toggleNode6(){\n        nodes[5] = true;   // node setter\n        return true;\n    }\n\n    function computeInteraction(point1, point2, point3, point4){\n        let x = point2 [0];\n        let y = point2 [1];\n        alpha1 = (point2 [1] - point1 [1]) / (point2 [0] - point1 [0]);\n        alpha2 = (point4 [1] - point3 [1]) / (point4 [0] - point3 [0]);\n        console.log(\"- Node1: (alpha1, alpha2) \" + alpha1 + \", \" + alpha2);\n        if(alpha1 === alpha2) alert(`Special Case: These lines are parallel (i.e they will never meet), hence there is no instersection. [${x},${y}] is not the correct expected outputs, your expected output should probably be [] or throw an exception or something.`);\n        if(alpha1.toString() === \"NaN\" || alpha2.toString() === \"NaN\"){ \n            toggleNode1()\n            return [x,y];\n        }\n        if (toggleNode1() && alpha1.toString() !== alpha2.toString()) {\n            nodes[1] = true;\n            // If first line is vertical\n           if (Math.abs(alpha1) > 4000)  {\n             if (toggleNode3() && Math.abs(alpha2) < 4000) {\n                nodes[3] = true;  // node setter\n                x = point1 [0];\n                let beta2 = point4 [1] - alpha2 * point4 [0];\n                y = alpha2 * x + beta2;\n            }\n            // If second line is vertical\n            } else if (toggleNode5() && Math.abs(alpha2) > 4000) {\n                if (toggleNode6() && Math.abs(alpha1) < 4000) {\n                    nodes[6] = true;\n                    x = point3 [0];\n                    let beta1 = point2 [1] - alpha1 * point2 [0];\n                    y = alpha1 * x + beta1;\n                }\n            } else { \n                nodes[7] = true;\n                sameSignum = Math.sign(alpha1) === Math.sign(alpha2);\n                if ((sameSignum && (Math.abs(alpha1) > Math.abs(alpha2)   ? alpha1 / alpha2   : alpha2 / alpha1) > 1.0001)\n                    || (!sameSignum && Math.abs(alpha1 - alpha2) > 1E-5)) {\n                    nodes[8] = true;\n                    let beta1 = point2 [1] - alpha1 * point2 [0];\n                    let beta2 = point4 [1] - alpha2 * point4 [0];\n                    x = (beta2 - beta1) / (alpha1 - alpha2);\n                    y = alpha1 * x + beta1;\n                }\n            } \n        }\n        console.log(\"- Node10: (alpha1, alpha2, sameSignum): \" + alpha1 + \", \" + alpha2 + \", \" + sameSignum);\n        nodes[9] = true;\n        return [x, y];\n    }\n\n    const [p1_0, setP1_0] = useState(0);\n    const [p1_1, setP1_1] = useState(0);\n    const [p2_0, setP2_0] = useState(0);\n    const [p2_1, setP2_1] = useState(0);\n    const [p3_0, setP3_0] = useState(0);\n    const [p3_1, setP3_1] = useState(0);\n    const [p4_0, setP4_0] = useState(0);\n    const [p4_1, setP4_1] = useState(0);\n    const [thealpha1, setAlpha1] = useState(\"NaN\");\n    const [thealpha2, setAlpha2] = useState(\"NaN\");\n    const [thesignSignum, setSignnum] = useState([\"NaN\"]);\n    const [theoutput, setOutput] = useState(\"...\");\n    const [thenodes, setNodes] = useState([]);\n    const [expectedN, setExpectedN] = useState([]);\n    const [expected, setExpected] = useState(\"...\");\n\n\n    const handleP1_0 = (event) =>{\n        setP1_0(event.target.value);\n    }\n\n    const handleP1_1 = (event) =>{\n        setP1_1(event.target.value);\n    }\n\n    const handleP2_0 = (event) =>{\n        setP2_0(event.target.value);\n    }\n\n    const handleP2_1 = (event) =>{\n        setP2_1(event.target.value);\n    }\n\n    const handleP3_0 = (event) =>{\n        setP3_0(event.target.value);\n    }\n\n    const handleP3_1 = (event) =>{\n        setP3_1(event.target.value);\n    }\n\n    const handleP4_0 = (event) =>{\n        setP4_0(event.target.value);\n    }\n\n    const handleP4_1 = (event) =>{\n        setP4_1(event.target.value);\n    }\n\n    const clearNodes = () => {\n        nodes = [];\n        setNodes(nodes);\n        setExpectedN([]);\n    }\n\n    const clearInputs = () => {\n        setP1_0(\"\");\n        setP1_1(\"\");\n        setP2_0(\"\");\n        setP2_1(\"\");\n        setP3_0(\"\");\n        setP3_1(\"\");\n        setP4_0(\"\");\n        setP4_1(\"\");\n    }\n\n    const resetGobalValues = () => {\n        alpha1 = 0;\n        alpha2 = 0;\n        sameSignum = undefined;\n        output = [];\n        clearNodes();\n    }\n\n    const handleReset = () => {\n        resetGobalValues();\n        setAlpha1(\"NaN\");\n        setAlpha2(\"NaN\");\n        setSignnum(\"NaN\");\n        setOutput(output);\n        setExpected([]);\n        clearInputs();\n    }\n\n    const handleSubmit = () => {\n        resetGobalValues();\n        output = computeInteraction([p1_0, p1_1], [p2_0, p2_1], [p3_0, p3_1], [p4_0, p4_1]);\n        let correctFunction = new CorrectFunction();\n        let correct = correctFunction.getCorrectOutput([p1_0, p1_1], [p2_0, p2_1], [p3_0, p3_1], [p4_0, p4_1]);\n        setExpectedN(correctFunction.nodes);\n        setExpected(`[${correct[0]},${correct[1]}]`);\n        setAlpha1(alpha1);\n        setAlpha2(alpha2);\n        if(sameSignum === undefined){\n            setSignnum(\"NaN\");\n        }else{\n            sameSignum? setSignnum(\"True\"): setSignnum(\"False\");\n        }\n        setOutput(`[${output[0]}, ${output[1]}]`);\n        setNodes(nodes);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"container2\">\n                <div className=\"section\">\n                    <h3>Inputs</h3>\n                    <div>\n                        <label>point1: </label>\n                        <input className=\"input\" value={p1_0} onChange = {handleP1_0}></input>\n                        <input className=\"input\" value={p1_1} onChange = {handleP1_1}></input>\n                    </div>\n                    <div>\n                        <label>point2: </label>\n                        <input className=\"input\" value={p2_0} onChange = {handleP2_0}></input>\n                        <input className=\"input\" value={p2_1} onChange = {handleP2_1}></input>\n                    </div>\n                    <div>\n                        <label>point3: </label>\n                        <input className=\"input\" value={p3_0} onChange = {handleP3_0}></input>\n                        <input className=\"input\" value={p3_1} onChange = {handleP3_1}></input>\n                    </div>\n                    <div>\n                        <label>point4: </label>\n                        <input className=\"input\" value={p4_0} onChange = {handleP4_0}></input>\n                        <input className=\"input\" value={p4_1} onChange = {handleP4_1}></input>\n                    </div>\n                    <div className=\"clear\">\n                        <button onClick={handleReset}>Reset</button>\n                    </div>\n                    <div className=\"submit\">\n                        <button onClick={handleSubmit}>Submit</button>\n                    </div>  \n                </div>\n                <div className=\"section\">\n                    <h3>Computed Values</h3>\n                    <div className=\"flex-start\">\n                        <p>alpha1: <span>{thealpha1}</span> </p>\n                    </div>\n                    <div className=\"flex-start\">\n                        <p>alpha2: <span>{thealpha2}</span> </p>\n                    </div>\n                    <div className=\"flex-start\">\n                        <p>sameSignum: <span>{thesignSignum}</span> </p>\n                    </div>\n                </div> \n                <div className=\"section\">\n                    <h3>Outputs</h3>\n                    <div className=\"flex-col\">\n                        <p>Expected: {expected}</p>\n                        <p>Actual: {theoutput}</p>\n                    </div>\n                </div>\n                            \n            </div>\n            <div className=\"nc-section\">\n                {(thenodes.length !== 0) && <NodeCoverage nodes={thenodes} label=\"Actual Path\" />}\n                {(expectedN.length !== 0) && <NodeCoverage nodes={expectedN} label=\"Expected Path\" />}\n            </div>\n             \n        </div>\n    )\n}\n\n\nexport default SWTest\n","\nimport './App.css';\nimport SwTest from \"./components/SWTest\" \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SwTest />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}